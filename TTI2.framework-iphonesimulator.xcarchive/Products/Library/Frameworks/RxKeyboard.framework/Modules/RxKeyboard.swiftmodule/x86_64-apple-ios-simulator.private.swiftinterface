// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name RxKeyboard
// swift-module-flags-ignorable: -enable-bare-slash-regex
import RxCocoa
@_exported import RxKeyboard
import RxSwift
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol RxKeyboardType {
  var frame: RxCocoa.Driver<CoreFoundation.CGRect> { get }
  var visibleHeight: RxCocoa.Driver<CoreFoundation.CGFloat> { get }
  var willShowVisibleHeight: RxCocoa.Driver<CoreFoundation.CGFloat> { get }
  var isHidden: RxCocoa.Driver<Swift.Bool> { get }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class RxKeyboard : ObjectiveC.NSObject, RxKeyboard.RxKeyboardType {
  public static let instance: RxKeyboard.RxKeyboard
  final public let frame: RxCocoa.Driver<CoreFoundation.CGRect>
  final public let visibleHeight: RxCocoa.Driver<CoreFoundation.CGFloat>
  final public let willShowVisibleHeight: RxCocoa.Driver<CoreFoundation.CGFloat>
  final public let isHidden: RxCocoa.Driver<Swift.Bool>
  @objc deinit
}
extension RxKeyboard.RxKeyboard : UIKit.UIGestureRecognizerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func gestureRecognizer(_ gestureRecognizer: UIKit.UIGestureRecognizer, shouldReceive touch: UIKit.UITouch) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc dynamic public func gestureRecognizer(_ gestureRecognizer: UIKit.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
}
